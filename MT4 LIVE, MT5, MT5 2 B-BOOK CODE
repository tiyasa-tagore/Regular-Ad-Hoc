```{r}
start <- Sys.time()

start <- "2024-10-30"
start_date <- as.numeric(as.POSIXct(start, tz = "GMT"))

b_book_demo_mt4 <- read.csv("deals (2).csv")
b_book_demo_mt5 <- read.csv("deals.csv")
b_book_demo_mt5_2 <- read.csv("deals (4).csv")  # New CSV file

## Imports --------------
library(RMySQL)
library(tidyverse)
library(lubridate)
library(rio)
library(googlesheets4)
library(writexl)
library(zoo)
library(purrr)

### Database Connection & Tables Connection -------------------
api_backend <- dbConnect(
  MySQL(),
  dbname = "api_backend",
  user = "readonly_user",
  password = "password123",
  host = "production-8-sep-night.cqtlpb5sm2vt.ap-northeast-1.rds.amazonaws.com",
  port = 3306
)

# Process for b_book_demo_mt5
deals_1 <- b_book_demo_mt5 %>%
  mutate(Trader.profit = as.numeric(str_replace_all(Trader.profit, "USD", ""))) %>%
  mutate(TP.broker.profit = as.numeric(str_replace_all(TP.broker.profit, "USD", ""))) %>%
  group_by(Login) %>%
  summarise(total_trader_profit = sum(Trader.profit),
            total_tp_broker_profit = sum(TP.broker.profit))

zero_to_one_mt5 <- b_book_demo_mt5 %>%
  mutate(Trader.profit = as.numeric(str_replace_all(Trader.profit, "USD", ""))) %>%
  mutate(TP.broker.profit = as.numeric(str_replace_all(TP.broker.profit, "USD", ""))) %>%
  filter(Volume..lots. > 0 & Volume..lots. < 1) %>%
  group_by(Login) %>%
  summarise(zero_to_one_pnl = sum(Trader.profit))

# Process for b_book_demo_mt4
deals_2 <- b_book_demo_mt4 %>%
  mutate(Trader.profit = as.numeric(str_replace_all(Trader.profit, "USD", ""))) %>%
  mutate(Open.TP.broker.profit = as.numeric(str_replace_all(Open.TP.broker.profit, "USD", ""))) %>%
  mutate(Close.TP.broker.profit = as.numeric(str_replace_all(Close.TP.broker.profit, "USD", ""))) %>%
  mutate(TP.broker.profit = Open.TP.broker.profit + Close.TP.broker.profit) %>%
  group_by(Login) %>%
  summarise(total_trader_profit = sum(Trader.profit),
            total_tp_broker_profit = sum(TP.broker.profit))

zero_to_one_mt4 <- b_book_demo_mt4 %>%
  mutate(Trader.profit = as.numeric(str_replace_all(Trader.profit, "USD", ""))) %>%
  mutate(Open.TP.broker.profit = as.numeric(str_replace_all(Open.TP.broker.profit, "USD", ""))) %>%
  mutate(Close.TP.broker.profit = as.numeric(str_replace_all(Close.TP.broker.profit, "USD", ""))) %>%
  mutate(TP.broker.profit = Open.TP.broker.profit + Close.TP.broker.profit) %>%
  filter(Volume..lots. > 0 & Volume..lots. < 1) %>%
  group_by(Login) %>%
  summarise(zero_to_one_pnl = sum(Trader.profit))

# Process for b_book_demo_mt5_2 (New CSV)
deals_3 <- b_book_demo_mt5_2 %>%
  mutate(Trader.profit = as.numeric(str_replace_all(Trader.profit, "USD", ""))) %>%
  mutate(TP.broker.profit = as.numeric(str_replace_all(TP.broker.profit, "USD", ""))) %>%
  group_by(Login) %>%
  summarise(total_trader_profit = sum(Trader.profit),
            total_tp_broker_profit = sum(TP.broker.profit))

zero_to_one_mt5_2 <- b_book_demo_mt5_2 %>%
  mutate(Trader.profit = as.numeric(str_replace_all(Trader.profit, "USD", ""))) %>%
  mutate(TP.broker.profit = as.numeric(str_replace_all(TP.broker.profit, "USD", ""))) %>%
  filter(Volume..lots. > 0 & Volume..lots. < 1) %>%
  group_by(Login) %>%
  summarise(zero_to_one_pnl = sum(Trader.profit))

# Combine all datasets
test1 <- deals_1 %>%
  left_join(select(zero_to_one_mt5, Login = Login, zero_to_one_pnl)) %>%
  mutate(zero_to_one_pnl = ifelse(is.na(zero_to_one_pnl), 0, zero_to_one_pnl))

test2 <- deals_2 %>%
  left_join(select(zero_to_one_mt4, Login = Login, zero_to_one_pnl)) %>%
  mutate(zero_to_one_pnl = ifelse(is.na(zero_to_one_pnl), 0, zero_to_one_pnl))

test3 <- deals_3 %>%
  left_join(select(zero_to_one_mt5_2, Login = Login, zero_to_one_pnl)) %>%
  mutate(zero_to_one_pnl = ifelse(is.na(zero_to_one_pnl), 0, zero_to_one_pnl))

# Combine all deals together
deals <- rbind(test1, test2, test3)

# Accounts and metrics
accounts_df <- tbl(api_backend, "accounts") %>%
  filter(login %in% !!deals$Login) %>%
  select(id, login, starting_balance) %>%
  collect()

account_metrics_df <- tbl(api_backend, "account_metrics") %>%
  filter(account_id %in% !!accounts_df$id) %>%
  collect()

account_metrics_df_filtered <- account_metrics_df %>%
  left_join(select(accounts_df, account_id = id, login, starting_balance)) %>%
  mutate(metricDate = as.numeric(as.POSIXct(metricDate, tz = "GMT"))) %>%
  filter(metricDate == start_date) %>%
  distinct(login, .keep_all = TRUE) %>%
  mutate(pnl = lastEquity - starting_balance) %>%
  select(account_id, login, pnl)

final <- deals %>%
  left_join(select(account_metrics_df_filtered, Login = login, pnl))

# Calculate profits and performance metrics
positive_trader <- final %>%
  filter(pnl > 0) %>%
  summarise(sum_tp_broker_profit_profitable = sum(total_tp_broker_profit),
            sum_trader_profit_profitable = sum(total_trader_profit),
            profitable_trader_count = n(),
            zero_to_one_pnl_profitable = sum(zero_to_one_pnl)) %>%
  mutate(profit_saved_percentage_profitable = sum_tp_broker_profit_profitable / sum_trader_profit_profitable)

negative_trader <- final %>%
  filter(pnl < 0) %>%
  summarise(sum_tp_broker_profit_loser = sum(total_tp_broker_profit),
            sum_trader_profit_loser = abs(sum(total_trader_profit)),
            loser_trader_count = n(),
            zero_to_one_pnl_overall_loser = sum(zero_to_one_pnl)) %>%
  mutate(profit_saved_percentage_loser = sum_tp_broker_profit_loser / sum_trader_profit_loser)

# For positive traders with positive profits
positive_trader2 <- final %>%
  filter(pnl > 0) %>%
  filter(total_trader_profit > 0) %>%
  summarise(positive_tp_broker_profit = sum(total_tp_broker_profit),
            positive_trader_profit = sum(total_trader_profit),
            positive_trader_count = n(),
            zero_to_one_pnl_pos = sum(zero_to_one_pnl)) %>%
  mutate(positive_tp_broker_profit_percentage = positive_tp_broker_profit / positive_trader_profit)

# For negative traders with negative profits
negative_trader2 <- final %>%
  filter(pnl > 0) %>%
  filter(total_trader_profit < 0) %>%
  summarise(negative_tp_broker_profit = sum(total_tp_broker_profit),
            negative_trader_profit = abs(sum(total_trader_profit)),
            negative_trader_count = n(),
            zero_to_one_pnl_neg = sum(zero_to_one_pnl)) %>%
  mutate(negative_tp_broker_profit_percentage = negative_tp_broker_profit / negative_trader_profit)

# For positive traders with negative profits
positive_trader3 <- final %>%
  filter(pnl < 0) %>%
  filter(total_trader_profit > 0) %>%
  summarise(positive_tp_broker_profit_loser = sum(total_tp_broker_profit),
            positive_trader_profit_loser = sum(total_trader_profit),
            positive_trader_count_loser = n(),
            pos_zero_to_one_pnl_loser = sum(zero_to_one_pnl)) %>%
  mutate(positive_tp_broker_profit_percentage_loser = positive_tp_broker_profit_loser / positive_trader_profit_loser)

# For negative traders with negative profits
negative_trader3 <- final %>%
  filter(pnl < 0) %>%
  filter(total_trader_profit < 0) %>%
  summarise(negative_tp_broker_profit_loser = sum(total_tp_broker_profit),
            negative_trader_profit_loser = abs(sum(total_trader_profit)),
            negative_trader_count_loser = n(),
            neg_zero_to_one_pnl_loser = sum(zero_to_one_pnl)) %>%
  mutate(negative_tp_broker_profit_percentage_loser = negative_tp_broker_profit_loser / negative_trader_profit_loser)

# Combine results
finaldata <- cbind(positive_trader, negative_trader)
finaldata2 <- cbind(positive_trader2, negative_trader2)
finaldata3 <- cbind(positive_trader3, negative_trader3)

# Create final output
output <- cbind(finaldata, finaldata2, finaldata3) %>%
  select(sum_trader_profit_profitable, sum_tp_broker_profit_profitable, profit_saved_percentage_profitable,
         profitable_trader_count, zero_to_one_pnl_profitable,
         positive_trader_profit, positive_tp_broker_profit, positive_tp_broker_profit_percentage, positive_trader_count, zero_to_one_pnl_pos,
         negative_trader_profit, negative_tp_broker_profit, negative_tp_broker_profit_percentage, negative_trader_count, zero_to_one_pnl_neg,
         sum_trader_profit_loser, sum_tp_broker_profit_loser, profit_saved_percentage_loser, loser_trader_count, zero_to_one_pnl_overall_loser,
         positive_trader_profit_loser, positive_tp_broker_profit_loser, positive_tp_broker_profit_percentage_loser, positive_trader_count_loser, pos_zero_to_one_pnl_loser,
         negative_trader_profit_loser, negative_tp_broker_profit_loser, negative_tp_broker_profit_percentage_loser, negative_trader_count_loser, neg_zero_to_one_pnl_loser)

# Write to CSV
write.csv(output, "b_book_report.csv")

# Close database connections
lapply(dbListConnections(MySQL()), dbDisconnect)

```
